(window["__LOADABLE_LOADED_CHUNKS__"] = window["__LOADABLE_LOADED_CHUNKS__"] || []).push([["reactPlayerPreview"],{

/***/ "./node_modules/react-player/lib/Preview.js":
/*!**************************************************!*\
  !*** ./node_modules/react-player/lib/Preview.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _defineProperty(e,r,t){return(r=_toPropertyKey(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e;}function _toPropertyKey(t){var i=_toPrimitive(t,\"string\");return\"symbol\"==typeof i?i:i+\"\";}function _toPrimitive(t,r){if(\"object\"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||\"default\");if(\"object\"!=typeof i)return i;throw new TypeError(\"@@toPrimitive must return a primitive value.\");}return(\"string\"===r?String:Number)(t);}__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"./node_modules/core-js/modules/es.array.iterator.js\");__webpack_require__(/*! core-js/modules/es.promise.js */ \"./node_modules/core-js/modules/es.promise.js\");__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"./node_modules/core-js/modules/es.regexp.exec.js\");__webpack_require__(/*! core-js/modules/es.string.replace.js */ \"./node_modules/core-js/modules/es.string.replace.js\");__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:true,configurable:true,writable:true,value}):obj[key]=value;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true});};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});}return to;};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode||!mod||!mod.__esModule?__defProp(target,\"default\",{value:mod,enumerable:true}):target,mod));var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var __publicField=(obj,key,value)=>{__defNormalProp(obj,typeof key!==\"symbol\"?key+\"\":key,value);return value;};var Preview_exports={};__export(Preview_exports,{default:()=>Preview});module.exports=__toCommonJS(Preview_exports);var import_react=__toESM(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));const ICON_SIZE=\"64px\";const cache={};class Preview extends import_react.Component{constructor(){super(...arguments);__publicField(this,\"mounted\",false);__publicField(this,\"state\",{image:null});__publicField(this,\"handleKeyPress\",e=>{if(e.key===\"Enter\"||e.key===\" \"){this.props.onClick();}});}componentDidMount(){this.mounted=true;this.fetchImage(this.props);}componentDidUpdate(prevProps){const{url,light}=this.props;if(prevProps.url!==url||prevProps.light!==light){this.fetchImage(this.props);}}componentWillUnmount(){this.mounted=false;}fetchImage({url,light,oEmbedUrl}){if(import_react.default.isValidElement(light)){return;}if(typeof light===\"string\"){this.setState({image:light});return;}if(cache[url]){this.setState({image:cache[url]});return;}this.setState({image:null});return window.fetch(oEmbedUrl.replace(\"{url}\",url)).then(response=>response.json()).then(data=>{if(data.thumbnail_url&&this.mounted){const image=data.thumbnail_url.replace(\"height=100\",\"height=480\").replace(\"-d_295x166\",\"-d_640\");this.setState({image});cache[url]=image;}});}render(){const{light,onClick,playIcon,previewTabIndex,previewAriaLabel}=this.props;const{image}=this.state;const isElement=import_react.default.isValidElement(light);const flexCenter={display:\"flex\",alignItems:\"center\",justifyContent:\"center\"};const styles={preview:_objectSpread({width:\"100%\",height:\"100%\",backgroundImage:image&&!isElement?`url(${image})`:void 0,backgroundSize:\"cover\",backgroundPosition:\"center\",cursor:\"pointer\"},flexCenter),shadow:_objectSpread({background:\"radial-gradient(rgb(0, 0, 0, 0.3), rgba(0, 0, 0, 0) 60%)\",borderRadius:ICON_SIZE,width:ICON_SIZE,height:ICON_SIZE,position:isElement?\"absolute\":void 0},flexCenter),playIcon:{borderStyle:\"solid\",borderWidth:\"16px 0 16px 26px\",borderColor:\"transparent transparent transparent white\",marginLeft:\"7px\"}};const defaultPlayIcon=/* @__PURE__ */import_react.default.createElement(\"div\",{style:styles.shadow,className:\"react-player__shadow\"},/* @__PURE__ */import_react.default.createElement(\"div\",{style:styles.playIcon,className:\"react-player__play-icon\"}));return/* @__PURE__ */import_react.default.createElement(\"div\",_objectSpread({style:styles.preview,className:\"react-player__preview\",onClick,tabIndex:previewTabIndex,onKeyPress:this.handleKeyPress},previewAriaLabel?{\"aria-label\":previewAriaLabel}:{}),isElement?light:null,playIcon||defaultPlayIcon);}}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcGxheWVyL2xpYi9QcmV2aWV3LmpzPzdkZjkiXSwibmFtZXMiOlsiX19jcmVhdGUiLCJPYmplY3QiLCJjcmVhdGUiLCJfX2RlZlByb3AiLCJkZWZpbmVQcm9wZXJ0eSIsIl9fZ2V0T3duUHJvcERlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2dldE93blByb3BOYW1lcyIsImdldE93blByb3BlcnR5TmFtZXMiLCJfX2dldFByb3RvT2YiLCJnZXRQcm90b3R5cGVPZiIsIl9faGFzT3duUHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiX19kZWZOb3JtYWxQcm9wIiwib2JqIiwia2V5IiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJfX2V4cG9ydCIsInRhcmdldCIsImFsbCIsIm5hbWUiLCJnZXQiLCJfX2NvcHlQcm9wcyIsInRvIiwiZnJvbSIsImV4Y2VwdCIsImRlc2MiLCJjYWxsIiwiX190b0VTTSIsIm1vZCIsImlzTm9kZU1vZGUiLCJfX2VzTW9kdWxlIiwiX190b0NvbW1vbkpTIiwiX19wdWJsaWNGaWVsZCIsIlByZXZpZXdfZXhwb3J0cyIsImRlZmF1bHQiLCJQcmV2aWV3IiwibW9kdWxlIiwiZXhwb3J0cyIsImltcG9ydF9yZWFjdCIsInJlcXVpcmUiLCJJQ09OX1NJWkUiLCJjYWNoZSIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiaW1hZ2UiLCJlIiwicHJvcHMiLCJvbkNsaWNrIiwiY29tcG9uZW50RGlkTW91bnQiLCJtb3VudGVkIiwiZmV0Y2hJbWFnZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsInByZXZQcm9wcyIsInVybCIsImxpZ2h0IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJvRW1iZWRVcmwiLCJpc1ZhbGlkRWxlbWVudCIsInNldFN0YXRlIiwid2luZG93IiwiZmV0Y2giLCJyZXBsYWNlIiwidGhlbiIsInJlc3BvbnNlIiwianNvbiIsImRhdGEiLCJ0aHVtYm5haWxfdXJsIiwicmVuZGVyIiwicGxheUljb24iLCJwcmV2aWV3VGFiSW5kZXgiLCJwcmV2aWV3QXJpYUxhYmVsIiwic3RhdGUiLCJpc0VsZW1lbnQiLCJmbGV4Q2VudGVyIiwiZGlzcGxheSIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsInN0eWxlcyIsInByZXZpZXciLCJfb2JqZWN0U3ByZWFkIiwid2lkdGgiLCJoZWlnaHQiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJiYWNrZ3JvdW5kU2l6ZSIsImJhY2tncm91bmRQb3NpdGlvbiIsImN1cnNvciIsInNoYWRvdyIsImJhY2tncm91bmQiLCJib3JkZXJSYWRpdXMiLCJwb3NpdGlvbiIsImJvcmRlclN0eWxlIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsIm1hcmdpbkxlZnQiLCJkZWZhdWx0UGxheUljb24iLCJjcmVhdGVFbGVtZW50Iiwic3R5bGUiLCJjbGFzc05hbWUiLCJ0YWJJbmRleCIsIm9uS2V5UHJlc3MiLCJoYW5kbGVLZXlQcmVzcyJdLCJtYXBwaW5ncyI6InNzREFBQSxHQUFJLENBQUFBLFFBQVEsQ0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQzVCLEdBQUksQ0FBQUMsU0FBUyxDQUFHRixNQUFNLENBQUNHLGNBQWMsQ0FDckMsR0FBSSxDQUFBQyxnQkFBZ0IsQ0FBR0osTUFBTSxDQUFDSyx3QkFBd0IsQ0FDdEQsR0FBSSxDQUFBQyxpQkFBaUIsQ0FBR04sTUFBTSxDQUFDTyxtQkFBbUIsQ0FDbEQsR0FBSSxDQUFBQyxZQUFZLENBQUdSLE1BQU0sQ0FBQ1MsY0FBYyxDQUN4QyxHQUFJLENBQUFDLFlBQVksQ0FBR1YsTUFBTSxDQUFDVyxTQUFTLENBQUNDLGNBQWMsQ0FDbEQsR0FBSSxDQUFBQyxlQUFlLENBQUdBLENBQUNDLEdBQUcsQ0FBRUMsR0FBRyxDQUFFQyxLQUFLLEdBQUtELEdBQUcsR0FBSSxDQUFBRCxHQUFHLENBQUdaLFNBQVMsQ0FBQ1ks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QUFlLENBQUcsZUFBZ0J6RCxZQUFZLENBQUNKLE9BQU8sQ0FBQzhELGFBQWEsQ0FBQyxLQUFLLENBQUUsQ0FBRUMsS0FBSyxDQUFFbkIsTUFBTSxDQUFDUyxNQUFNLENBQUVXLFNBQVMsQ0FBRSxzQkFBdUIsQ0FBQyxDQUFFLGVBQWdCNUQsWUFBWSxDQUFDSixPQUFPLENBQUM4RCxhQUFhLENBQUMsS0FBSyxDQUFFLENBQUVDLEtBQUssQ0FBRW5CLE1BQU0sQ0FBQ1QsUUFBUSxDQUFFNkIsU0FBUyxDQUFFLHlCQUEwQixDQUFDLENBQUMsQ0FBQyxDQUMzUSxNQUFPLGVBQWdCNUQsWUFBWSxDQUFDSixPQUFPLENBQUM4RCxhQUFhLENBQ3ZELEtBQUssQ0FBQWhCLGFBQUEsRUFFSGlCLEtBQUssQ0FBRW5CLE1BQU0sQ0FBQ0MsT0FBTyxDQUNyQm1CLFNBQVMsQ0FBRSx1QkFBdUIsQ0FDbENsRCxPQUFPLENBQ1BtRCxRQUFRLENBQUU3QixlQUFlLENBQ3pCOEIsVUFBVSxDQUFFLElBQUksQ0FBQ0MsY0FBYyxFQUM1QjlCLGdCQUFnQixDQUFHLENBQUUsWUFBWSxDQUFFQSxnQkFBaUIsQ0FBQyxDQUFHLENBQUMsQ0FBQyxFQUUvREUsU0FBUyxDQUFHbEIsS0FBSyxDQUFHLElBQUksQ0FDeEJjLFFBQVEsRUFBSTBCLGVBQ2QsQ0FBQyxDQUNILENBQ0YiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcGxheWVyL2xpYi9QcmV2aWV3LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fY3JlYXRlID0gT2JqZWN0LmNyZWF0ZTtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19nZXRPd25Qcm9wRGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgX19nZXRPd25Qcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBfX2dldFByb3RvT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgX19oYXNPd25Qcm9wID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX2V4cG9ydCA9ICh0YXJnZXQsIGFsbCkgPT4ge1xuICBmb3IgKHZhciBuYW1lIGluIGFsbClcbiAgICBfX2RlZlByb3AodGFyZ2V0LCBuYW1lLCB7IGdldDogYWxsW25hbWVdLCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xufTtcbnZhciBfX2NvcHlQcm9wcyA9ICh0bywgZnJvbSwgZXhjZXB0LCBkZXNjKSA9PiB7XG4gIGlmIChmcm9tICYmIHR5cGVvZiBmcm9tID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBmcm9tID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBmb3IgKGxldCBrZXkgb2YgX19nZXRPd25Qcm9wTmFtZXMoZnJvbSkpXG4gICAgICBpZiAoIV9faGFzT3duUHJvcC5jYWxsKHRvLCBrZXkpICYmIGtleSAhPT0gZXhjZXB0KVxuICAgICAgICBfX2RlZlByb3AodG8sIGtleSwgeyBnZXQ6ICgpID0+IGZyb21ba2V5XSwgZW51bWVyYWJsZTogIShkZXNjID0gX19nZXRPd25Qcm9wRGVzYyhmcm9tLCBrZXkpKSB8fCBkZXNjLmVudW1lcmFibGUgfSk7XG4gIH1cbiAgcmV0dXJuIHRvO1xufTtcbnZhciBfX3RvRVNNID0gKG1vZCwgaXNOb2RlTW9kZSwgdGFyZ2V0KSA9PiAodGFyZ2V0ID0gbW9kICE9IG51bGwgPyBfX2NyZWF0ZShfX2dldFByb3RvT2YobW9kKSkgOiB7fSwgX19jb3B5UHJvcHMoXG4gIC8vIElmIHRoZSBpbXBvcnRlciBpcyBpbiBub2RlIGNvbXBhdGliaWxpdHkgbW9kZSBvciB0aGlzIGlzIG5vdCBhbiBFU01cbiAgLy8gZmlsZSB0aGF0IGhhcyBiZWVuIGNvbnZlcnRlZCB0byBhIENvbW1vbkpTIGZpbGUgdXNpbmcgYSBCYWJlbC1cbiAgLy8gY29tcGF0aWJsZSB0cmFuc2Zvcm0gKGkuZS4gXCJfX2VzTW9kdWxlXCIgaGFzIG5vdCBiZWVuIHNldCksIHRoZW4gc2V0XG4gIC8vIFwiZGVmYXVsdFwiIHRvIHRoZSBDb21tb25KUyBcIm1vZHVsZS5leHBvcnRzXCIgZm9yIG5vZGUgY29tcGF0aWJpbGl0eS5cbiAgaXNOb2RlTW9kZSB8fCAhbW9kIHx8ICFtb2QuX19lc01vZHVsZSA/IF9fZGVmUHJvcCh0YXJnZXQsIFwiZGVmYXVsdFwiLCB7IHZhbHVlOiBtb2QsIGVudW1lcmFibGU6IHRydWUgfSkgOiB0YXJnZXQsXG4gIG1vZFxuKSk7XG52YXIgX190b0NvbW1vbkpTID0gKG1vZCkgPT4gX19jb3B5UHJvcHMoX19kZWZQcm9wKHt9LCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KSwgbW9kKTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ge1xuICBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuICByZXR1cm4gdmFsdWU7XG59O1xudmFyIFByZXZpZXdfZXhwb3J0cyA9IHt9O1xuX19leHBvcnQoUHJldmlld19leHBvcnRzLCB7XG4gIGRlZmF1bHQ6ICgpID0+IFByZXZpZXdcbn0pO1xubW9kdWxlLmV4cG9ydHMgPSBfX3RvQ29tbW9uSlMoUHJldmlld19leHBvcnRzKTtcbnZhciBpbXBvcnRfcmVhY3QgPSBfX3RvRVNNKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5jb25zdCBJQ09OX1NJWkUgPSBcIjY0cHhcIjtcbmNvbnN0IGNhY2hlID0ge307XG5jbGFzcyBQcmV2aWV3IGV4dGVuZHMgaW1wb3J0X3JlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm1vdW50ZWRcIiwgZmFsc2UpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdGF0ZVwiLCB7XG4gICAgICBpbWFnZTogbnVsbFxuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJoYW5kbGVLZXlQcmVzc1wiLCAoZSkgPT4ge1xuICAgICAgaWYgKGUua2V5ID09PSBcIkVudGVyXCIgfHwgZS5rZXkgPT09IFwiIFwiKSB7XG4gICAgICAgIHRoaXMucHJvcHMub25DbGljaygpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMubW91bnRlZCA9IHRydWU7XG4gICAgdGhpcy5mZXRjaEltYWdlKHRoaXMucHJvcHMpO1xuICB9XG4gIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBjb25zdCB7IHVybCwgbGlnaHQgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKHByZXZQcm9wcy51cmwgIT09IHVybCB8fCBwcmV2UHJvcHMubGlnaHQgIT09IGxpZ2h0KSB7XG4gICAgICB0aGlzLmZldGNoSW1hZ2UodGhpcy5wcm9wcyk7XG4gICAgfVxuICB9XG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMubW91bnRlZCA9IGZhbHNlO1xuICB9XG4gIGZldGNoSW1hZ2UoeyB1cmwsIGxpZ2h0LCBvRW1iZWRVcmwgfSkge1xuICAgIGlmIChpbXBvcnRfcmVhY3QuZGVmYXVsdC5pc1ZhbGlkRWxlbWVudChsaWdodCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBsaWdodCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IGltYWdlOiBsaWdodCB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGNhY2hlW3VybF0pIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBpbWFnZTogY2FjaGVbdXJsXSB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGltYWdlOiBudWxsIH0pO1xuICAgIHJldHVybiB3aW5kb3cuZmV0Y2gob0VtYmVkVXJsLnJlcGxhY2UoXCJ7dXJsfVwiLCB1cmwpKS50aGVuKChyZXNwb25zZSkgPT4gcmVzcG9uc2UuanNvbigpKS50aGVuKChkYXRhKSA9PiB7XG4gICAgICBpZiAoZGF0YS50aHVtYm5haWxfdXJsICYmIHRoaXMubW91bnRlZCkge1xuICAgICAgICBjb25zdCBpbWFnZSA9IGRhdGEudGh1bWJuYWlsX3VybC5yZXBsYWNlKFwiaGVpZ2h0PTEwMFwiLCBcImhlaWdodD00ODBcIikucmVwbGFjZShcIi1kXzI5NXgxNjZcIiwgXCItZF82NDBcIik7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBpbWFnZSB9KTtcbiAgICAgICAgY2FjaGVbdXJsXSA9IGltYWdlO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxpZ2h0LCBvbkNsaWNrLCBwbGF5SWNvbiwgcHJldmlld1RhYkluZGV4LCBwcmV2aWV3QXJpYUxhYmVsIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgaW1hZ2UgfSA9IHRoaXMuc3RhdGU7XG4gICAgY29uc3QgaXNFbGVtZW50ID0gaW1wb3J0X3JlYWN0LmRlZmF1bHQuaXNWYWxpZEVsZW1lbnQobGlnaHQpO1xuICAgIGNvbnN0IGZsZXhDZW50ZXIgPSB7XG4gICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIlxuICAgIH07XG4gICAgY29uc3Qgc3R5bGVzID0ge1xuICAgICAgcHJldmlldzoge1xuICAgICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgICAgIGJhY2tncm91bmRJbWFnZTogaW1hZ2UgJiYgIWlzRWxlbWVudCA/IGB1cmwoJHtpbWFnZX0pYCA6IHZvaWQgMCxcbiAgICAgICAgYmFja2dyb3VuZFNpemU6IFwiY292ZXJcIixcbiAgICAgICAgYmFja2dyb3VuZFBvc2l0aW9uOiBcImNlbnRlclwiLFxuICAgICAgICBjdXJzb3I6IFwicG9pbnRlclwiLFxuICAgICAgICAuLi5mbGV4Q2VudGVyXG4gICAgICB9LFxuICAgICAgc2hhZG93OiB7XG4gICAgICAgIGJhY2tncm91bmQ6IFwicmFkaWFsLWdyYWRpZW50KHJnYigwLCAwLCAwLCAwLjMpLCByZ2JhKDAsIDAsIDAsIDApIDYwJSlcIixcbiAgICAgICAgYm9yZGVyUmFkaXVzOiBJQ09OX1NJWkUsXG4gICAgICAgIHdpZHRoOiBJQ09OX1NJWkUsXG4gICAgICAgIGhlaWdodDogSUNPTl9TSVpFLFxuICAgICAgICBwb3NpdGlvbjogaXNFbGVtZW50ID8gXCJhYnNvbHV0ZVwiIDogdm9pZCAwLFxuICAgICAgICAuLi5mbGV4Q2VudGVyXG4gICAgICB9LFxuICAgICAgcGxheUljb246IHtcbiAgICAgICAgYm9yZGVyU3R5bGU6IFwic29saWRcIixcbiAgICAgICAgYm9yZGVyV2lkdGg6IFwiMTZweCAwIDE2cHggMjZweFwiLFxuICAgICAgICBib3JkZXJDb2xvcjogXCJ0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB3aGl0ZVwiLFxuICAgICAgICBtYXJnaW5MZWZ0OiBcIjdweFwiXG4gICAgICB9XG4gICAgfTtcbiAgICBjb25zdCBkZWZhdWx0UGxheUljb24gPSAvKiBAX19QVVJFX18gKi8gaW1wb3J0X3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiBzdHlsZXMuc2hhZG93LCBjbGFzc05hbWU6IFwicmVhY3QtcGxheWVyX19zaGFkb3dcIiB9LCAvKiBAX19QVVJFX18gKi8gaW1wb3J0X3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiBzdHlsZXMucGxheUljb24sIGNsYXNzTmFtZTogXCJyZWFjdC1wbGF5ZXJfX3BsYXktaWNvblwiIH0pKTtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGltcG9ydF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBcImRpdlwiLFxuICAgICAge1xuICAgICAgICBzdHlsZTogc3R5bGVzLnByZXZpZXcsXG4gICAgICAgIGNsYXNzTmFtZTogXCJyZWFjdC1wbGF5ZXJfX3ByZXZpZXdcIixcbiAgICAgICAgb25DbGljayxcbiAgICAgICAgdGFiSW5kZXg6IHByZXZpZXdUYWJJbmRleCxcbiAgICAgICAgb25LZXlQcmVzczogdGhpcy5oYW5kbGVLZXlQcmVzcyxcbiAgICAgICAgLi4ucHJldmlld0FyaWFMYWJlbCA/IHsgXCJhcmlhLWxhYmVsXCI6IHByZXZpZXdBcmlhTGFiZWwgfSA6IHt9XG4gICAgICB9LFxuICAgICAgaXNFbGVtZW50ID8gbGlnaHQgOiBudWxsLFxuICAgICAgcGxheUljb24gfHwgZGVmYXVsdFBsYXlJY29uXG4gICAgKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-player/lib/Preview.js\n");

/***/ })

}]);